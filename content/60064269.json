{"question_id": "60064269", "question_text": "", "question_title": "如何看待「机器学习不需要数学，很多算法封装好了，调个包就行」这种说法？", "question_commet": "​15 条评论", "answer_number": "222 个回答", "question_followers": "3,259", "brower_number": "550,488"}
{"answer_author": "阿萨姆", "answer_id": 172305599, "answer_text": "谢邀。不抖机灵，想从接触过机器学习学术圈但已投身工业界的角度来回答。我认为：大部分机器学习从业者不需要过度的把时间精力放在数学上，而该用于熟悉不同算法的应用场景和掌握一些调参技巧。好的数学基础可以使你的模型简洁高效，但绝非必要的先决条件。----------------------------------------------------------------------------------------------------------------------原因如下：1. 即使你有了一定的数学功底，还是不知道怎么调参或者进行优化。这话说的虽然有点自暴自弃，但扪心自问在座的各位，当你发现accuracy不好、loss很高、模型已经overfitting了，你唰唰唰列列公式玩玩矩阵就知道问题出在哪里了吗？不一定。诚然，懂得更多的统计原理可以帮助推测问题出在了哪里，你可能换了一个loss function或者加了新的regularizer，但结果不一定会更好:( 数学基础之于机器学习从业者很像debugger之于码农，它给了你方向，但不能保证你一定可以解决问题。那怎么能解决问题？只有经验经验经验，别无他法，有时候甚至靠的是直觉。数学基础是好的内功基础，但你调包调多了，其实也慢慢能抓到一些感觉，不必看不起“调包侠”。2. 工业界可以应用的模型是很有限的，可调的参数也是有限的。工业界选择模型非常看重可解释性，效率，以及和整个系统的整合能力。举例，在我的工作中，大部分时间都在使用Regression和Decision Tree相关的算法（如 Random Forests）。是因为这两个算法最好么？不，恰恰是因为这两个算法稳定及高效，而且容易解释。对于这样的模型，你即使数学能力很强，能调整的参数也是有限的。根据网上的例子和经验，大量的工程师可以在数学基础稍弱的情况下做到很好的效果。3. 数学/统计知识已经成了既得利益者刻意为外来者建立的一道壁垒。不知道大家有多少人是从事过ML研究的。我个人的观察是做出成绩的ML研究人员是有限的，科班出身的researcher更是远远无法工业界的空缺。所以大家没有必要担心会被转行者抢了饭碗，也没有必要刻意鼓吹一定要懂矩阵，凸优化，等数学知识才配做机器学习。大家都是出来卖的，不必互相为难。说来惭愧，在工作中我常常跟老板说这个人不能用，你要用我这种科班出身的人，但我内心是不赞同的。每当我看到知乎上有人问机器学习怎么入门，结果大家立马推荐第一本就看PRML和Statitical Learning以及一大堆公开课和数学课的时候，我的内心是崩溃的。各位答主的目标是把所有人都吓回去还是秀一下优越感？4. 理论模型和实际应用分的是两块不同的蛋糕。承接第2,3点，做理论研究的发力于突破，提出新的模型或者优化方法，做应用的致力于把模型应用于数据上，攫取商业价值。这两者不存在利益冲突，做理论的人有自带正统光环的优势，所以更该显得大度一些。只有“调包”的人越来越多，这个行业才会繁荣，因为证明技术落了地，可以带来实际价值。5. 行业的发展趋势是降低工具的使用难度，这让我们不必反复造轮子。亚马、逊谷歌、微软等各大平台都开放了他们的机器学习工具。以前人们还需要自己写各种模型，好一些的调一下sklearn，但现在Azure ML Studio已经方便到零代码了。年初的时候，我试了一下ML studio，简直方便的可怕，完全是图形拖动连接就可以建立模型，那一刻我仿似看到了自己即将失业。 6. 文艺一点说，我们需要更包容的心态，切勿文人相轻。想要接触了解一门学科，应该先有兴趣，才有探索的积极性。就像我们第一次看到Hello word出现的样子，很多刚入行的人第一次看到机器学习能解决实际问题时，会产生浓厚的兴趣。我怕的就是所谓的圈内人都说你必须要会矩阵分解，必须要会用trace算导数，必须会优化，才能开始学习机器学习。这个周期太长，很多人连开始的勇气都没有~我觉得不管怎么样，要先动手做起来，发现自己的不足，再去补充需要的东西。既然学术是自由的，我们就打开大门，欢迎大家都进来坐坐。如果他/她不喜欢，欢迎到隔壁串门。但我们不要给自己家门垒了高高的台阶，说闲人勿进。久而久之，难免门可罗雀。----------------------------------------------------------------------------------------------------------------------综上，我觉得应用机器学习模型和技巧既不能完全不懂数学，两眼一抹黑，也不该要求每个从业者都要精通各种数学理论。模型应用者要长存对理论的敬畏之心，不要总想搞个大新闻说“机器学习也不过如此”，但做理论的也不必觉得高人一等，别人都是二等公民。好了，不多说了，我去调包了(滑稽)", "answer_votes": "1.8K", "answer_comment": "​201 条评论"}
{"answer_author": "babyquant", "answer_id": 172813005, "answer_text": "我用的是R，做的是量化交易。机器学习这里我理解是统计预测模型，比如线性回归、LASSO、elastic net、neural network、gbm、random forest、svm、deep learning等等。一般机器学习模型是一个大矩阵，一列是y，其他是x，然后扔进模型跑一下，很多封装好的命令可以一行跑出来，里面包含了croos-validation和参数优化。参数优化可以自己设置，类似grid search。然后可以根据结果进行调整。这大概就是做机器学习的过程。或许数据清洗和收集会花大量时间，但是跑模型的程序不会太长。当然，如果跑下来效果不理想，就需要调整参数了。不同模型调整起来很不一样。有些人会说“神经网络比svm,boosting好”，很大程度上是因为：（1）他更熟悉神经网络；（2）他对神经网络有更深的感情，花了10倍的时间调参；（3）他就是要证明神经网络更好，在svm上选一个差的；所以很多时候模型的结果跟使用者本身的水平和偏好有关，跟模型本身无关。至于需要不需要数学。如果仅仅是调参方面的活，从100个lambda取一个最好的，相当于从100个数字里选一个最大的或最小的，我不清楚这是小学数学还是初中数学，反正一定去不到高中。这方面的编程，我不觉得比递归画图那些复杂，而且我清楚地记得我学递归画图LOGO语言是小学5、6年级。那是不是说“使用机器学习用到的数学和编程只有小学水平，没必要招计算机博士了，小学毕业生就可以了”。应该说绝大多数的实际场合的应用只需要使用已有的程序包就可以，但很多机器学习博士是研究计算机视觉和自然语言的，那些还不是很成熟，还有很多深挖的空间，这肯定需要专门的博士才行。", "answer_votes": "48", "answer_comment": "​16 条评论"}
{"answer_author": "何钦尧", "answer_id": 172059809, "answer_text": "总的来说，当不同的人说起机器学习的时候，虽然都是用的同一个词，但是他们实际上指的是完全不同的东西。", "answer_votes": "159", "answer_comment": "​21 条评论"}
{"answer_author": "王刚", "answer_id": 172678689, "answer_text": "<img src=\"https://pic3.zhimg.com/50/v2-80bf6817181468a79cab9993a0694c29_hd.jpg\" data-rawwidth=\"1906\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"1906\" data-original=\"https://pic3.zhimg.com/v2-80bf6817181468a79cab9993a0694c29_r.jpg\">谢谢邀请，不过貌似来晚了啊，补充一下作为一枚在读小硕的一点点看法吧这句话大概说的是未来的图景吧：当所有AI/ML/DL算法都非常成熟，且在工业界下已经形成相应的标准（类似于视频编解码中，AVS，MPEG那种标准）之后，的确如此；在这之前，既然需要工业界形成标准，那么应该少不了大公司的技术研发、产品设计、市场运营，这需要一个周期，可能还比较长；在这之前，公司需要招聘和培养人才，需要招聘什么样的人呢？基本上两种吧：①对相关算法理解比较深，应用比较娴熟的算法工程师；②开发能力和工程经验比较丰富的程序员；在这之前，也就是我这个时候了。作为一枚不再继续读博、准备找工作的AI/ML/DL硕士生，想要找到一份满意的工作，需要怎么样呢？—— ①不懂数学，讲不清算法原理？哼，你猜一流公司的面试官会不会屌你呢？②只懂调参，调包，写paper？哼，你以为你是科学家，底下一帮小弟帮你干活？别做梦了，你就是小弟！！③你以为只会调用PyTorch、TensorFlow、MxNet的那些package，人五人六地架构各种网络就行啦？T Y T N！！LeetCode没刷爆，动态规划C++/Java/Python 写不出来，哪凉快哪待着去吧！……各位且行其珍惜呦。", "answer_votes": "32", "answer_comment": "​8 条评论"}
{"answer_author": "傅睿卿", "answer_id": 172522358, "answer_text": "写在前面，虽然本答案观点可能会让很多同行难受，但希望大家能够认真思考后再喷。另外，爪机录入，排版请大家多包涵。先说答案：从趋势上看，大多数人工智能工作者会是这样，并且只有这样，行业才能迈向成熟。下面分别从道理上和现状上分析。首先，从人工智能的目的来看，我们认为什么样的算法是一个好的人工智能算法？对于一个具体问题，是用高度定制的算法解决符合人工智能思想，还是用高针对性数据加通用算法符合人工智能思想？任何一个从业者都应该清晰的知道是数据驱动的算法才是真正的人工智能算法吧！那么我要多问一句，为什么？为什么我们应避免用定制算法来提升性能？（诚然，这其实是多数要发论文的朋友最常干的事情，通过针对某一问题精调算法和参数来得到一流的实验结果）因为，任何形式的定制算法，本质上说，都是在增加算法的先验假设，而这一过程其实就是我们使用传统算法时所做的，用设计者的猜想来建立系统模型解决问题的经典流程，区别只不过是我们建立模型时使用了一些更新的算法罢了。这样做的问题非常典型，就是算法〔人为的〕过拟合，虽然在数据集上测试效果好，但实用性会大度降低--懂过拟合的朋友一定明白我在说什么，不理解的朋友看结论就好了。但显然，在这样一个弱人工智能的时代，我们不可能全靠数据解决问题，必须还是要考虑算法的设计，而我的建议是，如果你的研究方向不是算法本身而是在某一背景下的应用，那理想的工程实践还应该是〔数据驱动优先，参数为辅配合，避免订制算法〕。其次从产业发现看，一个对所有从业人员都要求学习大量的、内在的、复杂的技术理论的行业绝对是一个市场空间极其有限的行业。其主要负面性体现在两个层面，第一，大量项目成本的不可行，从业人员门槛越高，价格自然越高，资源也越稀缺：所谓资源稀缺，就是指只要脱离行业核心应用领域，需求方就很难接触到技术提供方，以至于很多很好的应用点很难被发现。第二，则是本文读者要反思的问题了：深入理解技术细节的人，对市场、应用背景的理解和投入的精力往往有限。从业人员会把应用点和方法模式的制定扔给产品部门，并且很容易对这些工作表示不懈。我们来思考任何一个成熟行业，比如就说是离我们最近的软件行业，如果一个软件公司绝大部分程序员都每天只关注软件底层和内部原理，只让一些不太懂软件开发的人去弄跟用户有关的需求相关的功能、体验，这样一个公司在现代还能存货么？现在哪个公司不是要把需求、体验放在首位？那么，在看本文的诸位大神，请你们考虑一下，在实际的开发中，会不会真的有些孤芳自赏？所以说，如果我们的行业不能形成像软件开发行业那样大多数从业人员只需适量的学习就可以胜任大部分工作的状态，那么咋们就永远不是个正经的 行业，无论多高的关注度投入，咱们永远就是个 泡沫！顺便一提，各位做智能的朋友，你们在指责一些人只是会用库的同时，有没有想过，自己的编程水平，如果用你们自己的逻辑审视的时候，大部分人其实也是不合格的？编译原理、体系结构什么的都不懂也在写程序？话说到此，愿意思考的朋友肯定就有所反思了，下面我们谈谈实战。首先，我相信，即使是强调理解算法的朋友，也少数是自己真正实现算法的，为什么这样说？因为现在主流算法要不是什么Spark实现，就是Cuda实现，这两个想写出高效的程序都非常不容易，说句不客气的话，这比学AI难多了。所以真的擅长这两个工具的人，比AI工程师收入高，很多就不搞AI了。（所以我现在也鼓励很多学生，学实现可能比学算法前途更好）所以，我们这里主要还是讨论理解算但不设计算法的情况～大家都清楚，这样的人在行业占主流。当然，本文也不谈大神，只说还在学习的平民。我这里首先要谈的是学习的收益，而我的观点是，与其把时间都花在深入理解算法上，不如去横向的多学习算法。这里我们要针对两类不同背景的朋友来说，第一是应用数学出身，对优化类问题有充分的理解。这里我劝各位一句，只要您不是要在纯理论上有跨越式的突破，您的基础已经对现在的所有典型应用绰绰有余了，出于专业背景习惯去大量思考的那些点，说实话我很少很少遇到真的对您的项目产生了实质性影响的。所以对于这样背景的朋友，应该做的事情主要有两件，了解需求和了解惯用法。需求不多说，放下架子世俗一点就是了。惯用法很重要，你要清楚的不仅是算法的原理，还有在哪些情况下，哪些算法大约可以取得哪些效果，这绝对不是仅仅减少些无意义实验的时间这样简单的事情，而是培养理科背景的朋友工科思想的问题，这个问题太大，有机会再说，这里只说重点，AI绝对是一个工程问题，也就是说是一个考虑误差，考虑成本，考虑实践，考虑维护，考虑各种各样事的问题，如果只用理科思想考虑，你做的永远是一个玻璃模型。下面说说非数学专业的朋友，恩，那你们该补的功课还是要补的，不要看了我的题目就开始堕落了，但是，我这里还是要说说你要补什么。绝大部分学科，尤其是工程技术学科，你都可以把你的知识分成〔观点〕〔理论〕〔实践〕，如果你想和某个学科的人合作，或者管理某个学科的人，那你需要理解的是观点，也就是说，拿到一个问题他们会怎么看，怎么分析，基础假设是什么，自己最重要的，什么叫一个好的设计。如果你想开始从事一个领域，你需要的是学习实践或是说惯用法，从具体工作开始，从简单工作开始，先实践，后理解。如果之后你想在领域有所深入的理解，那你需要的是回归理论。现在人工智能领域的问题之一就是缺少足量的中层工程精英，无论是学习还是项目都严重缺乏方法论，一味最求高大上（然后在交付时改成传统方法，别跟我说你团队没干过这事）。我的建议是，我过你想成为行业中的一员，那你要做的就是先理解什么是人工智能，方法是学一些最经典的理论，理解这个学科的人怎么看问题，然后直接学习结论，也就是用库把实验做出来，因为你干的任何问题，其实都有高手解决过，只要你观点正确，就能看到你的问题其实就是某些已有问题，或者反过来说，你抽象问题的能力越强，代表你的理解越深，只有菜鸟和装X的人才看什么问题都是不同。在这样的背景下，你每多学习一种（一类）算法，你能解决的问题就多一种，这绝对比你用其它算法猛调参数有效。（还是那个前提，如果你不是论文灌水为目的，如果是，那用本身不是最优的算法调出最优的效果更容易发表，当然，个人并不赞同和鼓励）唯一要提醒的是，当你能解决一堆问题的时候，不要自大，永远记得，有比你厉害的人存在，而最厉害的，是搞理论的。所以，我的观点是，对行业绝大部分人来说，应该是有限的学习理论，大量学习和实践工程应用。对一个具体的学习者来说，抱有成为业界尖端的信心是好的，但还没达到基本从业者水平就盲目深入绝对有害，就好像一个人非要从编译原理开始学编程一样的不可理喻。对已经有所成的朋友来说，则应该更多的考虑行业如何更为健康，而不是透过强调你已经掌握的知识的重要性来自我肯定。～～～～～～～～～～～～～～写在后面，这是我离开知乎1年后回归的首个答题，期间我在私信看到了大量的交流和求助，由于时效性未知，所以之前的就不回复了，但今后还是欢迎大家一起多多交流，更希望大神能多多指教。", "answer_votes": "257", "answer_comment": "​27 条评论"}
{"answer_author": "数学建模老司机", "answer_id": 268442882, "answer_text": "这要看你的目标是什么了。如果你只是想利用机器学习做一些实例，那么会掉包就好，当然，如果能深入了解下原理，可以让你对该方法的应用更为科学，避免一些低级的笑话。如果你是一个基础计算机理论学家，那么会不会掉包反而不重要，你的工作基本上就是在做数学家的事情了，不仅原理要搞清楚，还要学会优化和创新。", "answer_votes": "12", "answer_comment": "​添加评论"}
{"answer_author": "芷菡", "answer_id": 172913070, "answer_text": "打个比方, 简化问题, 对于赛车来说, 有两个职业, 分别是赛车的研发工程师和赛车手.研发工程师对于这个赛车的内部原理是一清二楚, 但让他开的话, 水平可能一般般.赛车手对于赛车的内部原理可能一窍不通, 但经过一段时间的刻苦练习, 可以将赛车开得很熟练.这两个职业谁也别瞧不起谁, 做的是不同的工作.我确实发现有些人对于机器学习的内部原理不太懂, 但应用(调包)起来确比大部分科班出身的人要好, 比如kaggle的这位Leustagos | Kaggle,", "answer_votes": "19", "answer_comment": "​9 条评论"}
{"answer_author": "冯东", "answer_id": 205258718, "answer_text": "Sean Parent 有时候给 Photoshop team 里的人开课。他喜欢从晶体管的结构讲起。他说：他以前总是说一个好的工程师必须了解这些。接着他讲，有一次他结束了以晶体管结构开始的一次讲话之后，Donald Knuth 走过来和他说：我就一点都不知道晶体管结构。虽然 Sean 还是没有完全推翻自己的看法，但是以后就不说得那么绝对了。", "answer_votes": "91", "answer_comment": "​16 条评论"}
{"answer_author": "李运华", "answer_id": 204021513, "answer_text": "======================2017.11.02补充========================更变态的来了，基本上把神经网络都封装了，更不用说算法了：keras项目：Keras中文文档tensorflow的tf.estimator:  tf.estimator Quickstart=======================2017.10.22补充==============================最近在玩TensorFlow，基本验证了原答案，举几个简单的例子：tf.sigmoid:  sigmoid算法实现tf.nn.softmax:  softmax算法实现tf.squared_difference：差平方tf.train.GradientDescentOptimizer：梯度下降算法优化器tf.nn.relu：relu算法tf.tanh：双曲正切函数tf.nn.conv2d：卷积层tf.nn.max_pool：池化层一行简单代码：<img src=\"https://pic4.zhimg.com/50/v2-f4283670a08afe7b94fd0aa12c3e367b_hd.jpg\" data-caption=\"\" data-rawwidth=\"1792\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb\" width=\"1792\" data-original=\"https://pic4.zhimg.com/v2-f4283670a08afe7b94fd0aa12c3e367b_r.jpg\">=======================以下是原答案================================我记得我刚毕业的时候，老师学长谆谆教导：计算机体系结构很重要，8086指令、段地址、寄存器、内存寻址、指针、深入浅出MFC、冒泡排序、快速排序、链表。。。。。。很重要，如果不懂，肯定不能成为好程序员，就算是同样调用API完成任务，你要是懂这些，关键时刻就你会懂，老板不给你加薪给谁加薪？然而，毕业后我没有去做嵌入式、没有去做驱动、没有用汇编，以上这些全部都没什么卵用，用MFC也只是调用API，没有自己手写冒泡，后来用Java，HasMap、List等都是调API，也没见老板因为我不懂降我工资，因为我老板也不懂这些，他只看我有没有完成任务，有没有给它赚钱，他不会管我是调用API还是写汇编完成的；也没见哪位同事因为懂这些加薪了，因为工作中根本用不上！相反，我发现Java虚拟机垃圾回收原理、MySQL索引设计技巧、tcp网络编程模型、CAP、BASE。。。。。。等非常有用，不但解决了业务问题，老板还给我加薪，公司还给我升级，还可以到外面给别人演讲！所以，回到题主的问题，你应该先问一下自己几个问题：1）你是做什么专业的是机器学习理论研究么？ -> 如果不懂数学，还是尽早转行吧！ 还是将机器学习应用到业务中去？-> 不一定要懂很多数学，确实算法封装好了，应用就可以了，至于说调优，也是调参数，不是调算法，要开创一个新算法，那就属于机器学习的理论研究范畴了。2）现在机器学习发展是什么阶段？相当于50年代的纸带编程，还是60年代的汇编？还是70年代的C语言？还是90年代的Java？我理解机器学习现在类似于70年代的C语言，虽然写起来很方便了，但还是要和指针内存打交道，这里的指针和内存就是机器学习的算法中的数学知识，所以我觉得即使算法封装好了，也要理解基本原理，不然这么多算法，你怎么知道选哪个算法？", "answer_votes": "455", "answer_comment": "​63 条评论"}
{"answer_author": "Chen Moore", "answer_id": 172881882, "answer_text": "几十种语言写成的几百个库中数千个算法实现上万的参数，说吧，用哪个，全砸丫脸上丫也挑不出来", "answer_votes": "3", "answer_comment": "​3 条评论"}
{"answer_author": "陈坤龙", "answer_id": 172277793, "answer_text": "打完了才发现其实回答有点跑题，不过就这样吧，调参还是很需要数学的。。。之前看过《穿普拉达的女王》的一个片段记忆还满深刻的。这一段内容是女主陪着女魔头和一大堆超一流设计师讨论一个配饰的细节。女主不是很理解她们花如此大的功夫在这么细节的东西上面于是笑出声来，女魔头随后训斥道：你以为你不喜欢打扮就和这些顶尖的时尚无缘，但事实并不是这样。这些超一流的奢侈品牌设计师花了很大功夫创造出来每年的时尚潮流并在T台上展现。随后那些中高端的服装公司根据这些潮流指标打造出属于自己的设计（这些是大家能买得起的，不过依然很贵），最后那些请不起高端设计师的平民服装品牌就直接根据这些现成的设计拼拼凑凑让所有人都能够买到。我个人理解的女魔头的意思是，其实高端低端的时尚只是一个金字塔的共同组成部分而已，它们并不是割裂的。金字塔顶端的设计师创造时尚，金字塔低端的设计师让时尚推广到普通人中。我们离不开那些顶尖的奢侈品品牌去引领潮流，但也离不开平民品牌去让所有的人都能够把这些廉价享受这些潮流。机器学习技术，或者说任何一个科技的流动其实和这个时尚趋势的流动有着异曲同工之妙。最牛B的天才可以创造算法；很牛B的人可以改造算法，做成黑箱；普通的人呢，大部分时间就清洗数据调参。这里面一定有个高下之分吗？只能说大家都在做着自己的贡献吧。参加Kaggle比赛的高分者很多也就是import xgboost import LightGBM 然后调来调去.但他们的算法确实能给那些出题的公司带来（潜在的）收益。", "answer_votes": "21", "answer_comment": "​1 条评论"}
{"answer_author": "vczh", "answer_id": 204190044, "answer_text": "这跟不懂算法的实现也能把产品做出来的道理是差不多的。世界上那么多开发游戏的，都知道怎么做引擎吗？当然不知道，也不需要知道。", "answer_votes": "169", "answer_comment": "​29 条评论"}
{"answer_author": "要没时间了", "answer_id": 172782380, "answer_text": "不光是机器学习，不管你做什么高大上的东西，如果你只是鼓捣api，确实调调借口就行了。因为牛逼的东西大多对开发者比较友好，文档丰富。但是，只会鼓捣api有两个坏处1.若干年后，你仍在api上艰苦奋斗，薪水低的一逼。你儿子说爸爸我想玩ps4x代，你只能干瞪眼，告诉儿子小孩子不能玩游戏。被刚进来的应届生鄙视，年龄这么大，只会调接口。再严重一点，直接失业也是有可能的。2.你在任何一个领域都没话语权，因为你不深入。你变成了一个三流的伪全栈工程师。老板让你往东你不敢往西，永远也不敢说，老子不干了。以上两点，都是有真实例子发生在我身边的。我以前也没觉得算法啊，数学啊，多重要。但是当我做的东西多了，我真的，真的在一些场景下找到了我之前学过的算法知识，并且加以运用，提升效率。虽然我做的东西可能没那么高的性能要求。但是，这至少证明了两点1.学技术，勿以善小而不为。别忘记自己当初入行的初衷2. 算法，数学这些东西都是内功，很多人平常不在意，也用不到。但是真到了用到的时候，往往都是关键时刻，这就是你体现核心竞争力，比别人牛逼，让老板只给你涨工资的最好理由", "answer_votes": "25", "answer_comment": "​2 条评论"}
{"answer_author": "Xi Yang", "answer_id": 204408964, "answer_text": "一般来讲，做某个层次的软件，你需要熟悉比自己更底层一阶的东西——不用能够编写，但是要熟悉原理性的东西。比如你写Java系统，那就得熟悉JVM那一套。更何况如果你对它底层的数学一点都不懂，那你怎么判断某项操作的时间、空间代价？这对于软件开发是非常基本的事情吧。", "answer_votes": "7", "answer_comment": "​1 条评论"}
{"answer_author": "吊兰", "answer_id": 172449560, "answer_text": "这个问题应该这么问：各个领域的机器学习模型和算法能封装到什么程度？产业链怎么分工？不能简化成“要不要数学”这种黑白思维，加减乘除也是数学，不需要数学怎么编程？黑白思维马上就形成站队厮杀的局面。我把机器学习产业分工简化成提供者和使用者，提供者负责研究和封装，使用者负责把它应用到具体的工程中去。针对不同的领域封装程度肯定不一样，标准化程度高的领域，算法适用性就强，需要调整的东西就少。我把封装程度按从高到低列一下。A，问题非常明确、标准的领域，比如人脸识别，封装成黑箱，接口和参数也非常简单，从使用的角度和其它库没有区别，几乎所有软件工程师都可以调用。B，问题有一个通用的模式，但有一些可以预测的变化，核心算法封装成黑箱，但使用接口比较复杂，需要掌握算法的基本原理和相对简单的数学基础，懂得对业务特征进行抽象和参数匹配，能力比较强的软件工程师可以胜任。C，问题类型可以抽象出一定的模式，但具体问题的变化非常大，模型不能覆盖所有的变化。可以做出一个原型算法，但不能做成黑箱，需要根据具体情况修改优化模型、算法、参数。这种情况软件工程师无法胜任，需要机器学习专业人员。D，问题很难抽象成统一的模式，需要根据具体问题建立具体的模型算法。对于A、B领域，提供者做产品，可以迅速做大。对于C、D领域，提供者做服务，比较消耗人力，价格贵速度慢，只有大型项目付得起成本，应用面比较窄。所以，分领域讨论各自可以做到哪个层次啊，我不懂机器学习，也没有完整回答问题，只是给回答问题提供一个框架。", "answer_votes": "17", "answer_comment": "​3 条评论"}
{"answer_author": "孤云独去闲", "answer_id": 172915705, "answer_text": "有的时候问题根本就不是分类，聚类，regression这些有很多现成包的问题。有时候就算是上面这三种，也没有现成的东西。比如聚类，因为要能解释结果，也因为要融合进一些额外的行业知识，不能直接用现成的cluster算法。看到有人说图模型，exactly，用图模型的步骤是，建模，参数估计，预测。建模的时候要能写出概率分布，参数估计的时候要能写出似然函数，这时候可能会用些optimize的包，但这可不是调参数那么简单的，最起码要能求梯度吧。很赞同高票答案，如果只会xgb，rf，cnn调参数什么的，也算data scientist，没问题。但怕就怕有些工作不自己建模就解决不了。我们这边七三开吧，三成的工作靠调参数解决不了。不过没事，都是团队合作，需要数学的时候，找个会数学的合作就行了。合作几次，不会的人也都能学会了。哦 对了，还忘了个比较有技术含量的事情，做feature，我不是说七三开么，那七成里面都是要好好设计变量的，也就是feature engineering，还是有点技巧的。", "answer_votes": "10", "answer_comment": "​添加评论"}
{"answer_author": "圆胖肿", "answer_id": 226624524, "answer_text": "读书时候的事，同样用java，有一次我给老师发邮件，说，这个作业数据的size是不是太小了？我写的代码大概42s多一点就搞定了，老师回邮件说，真的吗？别人都说size太大了，你把你的程序发给我看看，我就发了，然后老师回复说，的确，下次搞大点然后第二天，我上课见到同学，同学说，哎呀，这个size太大了，我写的程序，跑了一个晚上都没跑完，我说哈？后来看了下，她是暴力解，复杂度是n^3，俺用了hashcode的amortized constant的复杂度现在越来越反对各种框架啊，引擎啊，把人都变笨了", "answer_votes": "124", "answer_comment": "​51 条评论"}
{"answer_author": "知乎用户", "answer_id": 172360478, "answer_text": "不但不用懂数学，也不用懂编程，框架都把算子写好了，调个算子就好了。", "answer_votes": "3", "answer_comment": "​4 条评论"}
{"answer_author": "留德华叫兽", "answer_id": 175472856, "answer_text": "建筑工地的工人不需要学建筑，按照工头指示再加几位老工友的“培训”即可轻车熟路。要成为一名优秀的建筑师却需要不知多少年的寒窗苦读，画画功底、力学知识、工程制图、软件操作等等都不可或缺。如果想一辈子在AI界搬砖，你确实不需要学数学，调用封装好的包，按照数据学科家等技术人员的指示，即可造出大楼。And good luck with that, 因为任何一个上过几月甚至几周培训学校的学员，都有可能取代你的这个位置。当然我没有否定搬砖工的作用，任何高楼大厦都是由他们辛辛苦苦一砖一瓦砌成的。社会有分工，in case 你想成为一名建筑大师，不妨看看我在下面的回答:想学数据分析（人工智能）需要学哪些课程？ - 知乎以及下面专栏--因为，机器学习 = 优化+统计+编程。[运筹帷幄]大数据和人工智能时代下的运筹学 - 知乎专栏", "answer_votes": "126", "answer_comment": "​15 条评论"}
{"answer_author": "灵剑", "answer_id": 171996287, "answer_text": "需要数学，不需要编程，只要你懂了其中的数学原理，再花一百块钱找个码农帮你调一下包就行了", "answer_votes": "149", "answer_comment": "​46 条评论"}
{"answer_author": "王晋东不在家", "answer_id": 268313743, "answer_text": "在一个并不遥远的国度，人们都不用做饭，更不用学做饭，想吃啥都能买到现成的。所以以后很多人家都不做饭了。会做饭的、还是想学习做饭的、想变着花样做自己想吃的饭的，也成了少数一部分人。这直接导致了房子户型发生大变化：从此以后没有厨房了，每家每户都多了个卧室，人民生活幸福感直线提升，喜闻乐见！饭馆的竞争也变得激烈起来。比如有吃G家饭的，有吃F家饭的，有吃M家饭的，也有吃S家饭的，口味不同，各有倾向。有一天，负责向这几家大饭店提供原材料的N家不开心了，使得原料严重缺乏。于是G家F家M家S家的生意统统都不太好过了。更直接的后果是：吃惯了这几家饭店的而又不做饭的人，开始挨饿了。有时候，G家、F家、M家和S家饭店的员工心情不好，也会举行个罢工什么的。于是，人们就又过上了挨饿的日子。这个时候，那些自己会做饭的、学过做饭的人，是饿不着的。", "answer_votes": "109", "answer_comment": "​38 条评论"}
{"answer_author": "yujiao li", "answer_id": 172253754, "answer_text": "汽车刚出现的年代，开车的人配备原理知识才玩的转。后来，汽车发展到完全不懂原理也可以开得很帅的年代，但出了故障还得靠修车大哥。而且只有高段位懂汽车原理的大牛，才可以设计、升级和改造汽车。", "answer_votes": "4", "answer_comment": "​3 条评论"}
{"answer_author": "blue", "answer_id": 172036017, "answer_text": "大概是做选择题时1，知道思路，一步一步求解得到答案2，随便蒙一个，管他对不对", "answer_votes": "4", "answer_comment": "​添加评论"}
{"answer_author": "知乎用户", "answer_id": 172970413, "answer_text": "看你是二八定律里的二还是八了二需要，八不需要", "answer_votes": "2", "answer_comment": "​添加评论"}
{"answer_author": "知乎用户", "answer_id": 172381580, "answer_text": "好多小公司确实如此。招了一批不懂数学不懂统计的二本学生，模型乱用包乱掉，用不用得对基本靠运气。偏偏老板就喜欢这样的人，不说了。。。", "answer_votes": "6", "answer_comment": "​1 条评论"}
{"answer_author": "匿名用户", "answer_id": 171878259, "answer_text": "这是一个必然趋势，不管在高科技上，还是在日常生活中的方方面面上，几乎所有东西都是封装好的黑箱，但同时，如果你愿意花时间是可以了解到的。要效率就要分工，要分工就必须信任系统内的每一个环节，坑是一定会有的，但从社会总体发展来说效率是提高的。", "answer_votes": "40", "answer_comment": "​9 条评论"}
{"answer_author": "Xenophon Tony", "answer_id": 205301939, "answer_text": "都是被well-defined的问题惯坏了。这其实是个人选择问题，希望（也告诫我自己）每一个在ML方向上做出过真切努力的人，都不会在盲目调包之中自废武功。", "answer_votes": "3", "answer_comment": "​添加评论"}
{"answer_author": "知乎用户", "answer_id": 172448437, "answer_text": "机器学习被发明的目的就是为了让更多的人享受到它所带来的科技进步。致力于做到让小白点个按钮就能用。如果非要人为的设置一个数学门槛值，只能说明这个技术还没有成熟到可以给小白用的地步，还需要继续发展。从这个角度说，题目中的这句话没错。说不懂数学就调不好参的，那还是因为技术发展不到位。到位的话，根本连参数都不用调。你看微波炉，各种参数贴门上，谁调参了？ ", "answer_votes": "33", "answer_comment": "​11 条评论"}
{"answer_author": "知乎用户", "answer_id": 172352051, "answer_text": "我原来也是这么想的，但事实证明这句话有问题。在 everything work 的情况下这句话一点问题都没有，比如你用 SVM 做个手写数字识别，你并不需要知道原理，调用一下就 OK，结果也很好。问题在于之后，主要是三点：1. 每一种算法都有其适用范围，然而这个适用范围是和实现方法强相关的。也就是说如果你不理解这个方法的数学原理，很多情况下你并不知道自己的数据是不是适合这个方法，只能一个一个的尝试即费时间又绕弯路。好不容易 work 了，你也不知道为什么。更多的时候还有可能调入过拟合之类的坑。2. 如果不知道原理，结果不符合预期的时候根本无法调试。我们平时怎么调试代码？单步或者插入输出语句。总结下来就是看中间状态，如果不知道原理，你根本不可能看懂中间状态的内容。甚至你根本就不知道中间状态是什么。你也无法用其他的数学理论从侧面来验证这种算法。3. 如果不知道原理，无法在原有的方法上进行改进。很多时候针对某些特定的问题对经典方法做些调整效果会出奇的好。如果不知道原理这条路基本就到头了。当然了，炼丹什么的…现在大家都不知道准确原理是啥（不然为啥叫炼丹），但是炼丹毕竟刚刚开始发展还需要时间来探索。", "answer_votes": "51", "answer_comment": "​10 条评论"}
{"answer_author": "钱鑫", "answer_id": 204215092, "answer_text": "No Free Lunch没有免费的午餐，换句话说，花钱了也许就能吃上午餐了，即使不是那么可口，但是真的需要山珍海味吗？对ml背后的知识的认识可以认为是一种先验知识，这种先验知识可以帮助最大化找寻到更优解的概率，但是同样也需要注意到获取该先验知识的代价。在求解npc问题时，我们可以考虑在多项式时间内近似求解，做机器学习也是一样的道理。再说，想想看那一堆随机搜索算法和雇佣一群程序员调包一摸一样，并不需要什么先验知识，没毛病啊。", "answer_votes": "1", "answer_comment": "​添加评论"}
{"answer_author": "知乎用户", "answer_id": 172071066, "answer_text": "你用scikit调个包跑个模型确实也叫“机器学习”啊，当然离实际应用多远那就是另一个问题了", "answer_votes": "0", "answer_comment": "​添加评论"}
{"answer_author": "dontbeatmycat", "answer_id": 205267034, "answer_text": "1. 机器学习模型很容易，无论从原理上还是使用上，对所有人都没什么门槛，撸个模型，做个实验，写篇博客吹吹牛逼，困难吗？需要数学吗？我看不是。2. 但是，机器学习系统开发很难，主要几个方面：如何将实际项目需求抽象成机器学习模型如何收集训练数据，如何持续获得训练数据，数据分布不合理怎么办（调参，特征工程，这些事情实际上就是工作量，没有明显的难度）如何面对你的客户：产品经理，合作方，用户准确率和召回率问题在科研中可能就是一个数字，但是实际产品上，一个误召回可能会严重伤害用户体验。如何在系统中加入“规则”，如何评估规则对模型的影响。", "answer_votes": "2", "answer_comment": "​1 条评论"}
{"answer_author": "张同学", "answer_id": 227427658, "answer_text": "大概就像某些学算法竞赛的c++选手只会用sort一样？STL固然方便，，，但是好像某大学今年自主招生面试问起排序怎么写来，一批只会sort的oier GG了……", "answer_votes": "1", "answer_comment": "​添加评论"}
{"answer_author": "你不你MatMan", "answer_id": 172745426, "answer_text": "不懂数学也可以吧，起码得懂些原理吧，不然怎么调参，怎么interpret 呢，你跟客户展示时候说，这就是个黑匣子，把数据扔进去就有结果了吗？另外认真的说，数学的确不用学太多，把数学分析、高等代数，概率论学好学扎实，就可以了。另外的什么时间序列到时候用到了学呗。小学生的愚见，供参考。另外我认为统计是一门独立的学科就不算进了。", "answer_votes": "3", "answer_comment": "​添加评论"}
{"answer_author": "叛逆者", "answer_id": 171952827, "answer_text": "这叫做“用机器学习”，不是“做机器学习”。大部分人确实是用为主，所以也确实是调包就可以。不过调参怎么办，你避不开啊。给你包调，你也得会调参啊。", "answer_votes": "110", "answer_comment": "​16 条评论"}
{"answer_author": "空明流转", "answer_id": 205318878, "answer_text": "当然不需要。小学文化水平即可，部分情况下文盲也没问题。你要做的就是，发个大财，然后招点博士就行了。", "answer_votes": "34", "answer_comment": "​7 条评论"}
{"answer_author": "BrianRWang", "answer_id": 172045646, "answer_text": "这个世界不需要程序员，很多代码就在Github上，复制粘贴运行一下就好了。", "answer_votes": "12", "answer_comment": "​8 条评论"}
{"answer_author": "Eggod", "answer_id": 227226627, "answer_text": "没错啊，就这样啊，没有任何问题啊。你就算清华大学那本数据结构都不需要看完，你不照样去当程序员。你开车难道还得懂引擎啥原理，坏了自己修吗。可能你是个博士生，研究生，本科生，总之想往这方面走。但说实话，你想挣钱，就有的项目，你只要拿的到这个项目，你真可以就懂到这个水平，就知道咋做，做出来，验收过，拿钱。别说外面了，很多高校也就这样，你说人家混，没本事，但人家甲方也就是要理论落地实际应用，不然会调参就能拿到钱，人毕竟还是有市场需求的。再说，当真这参数好调啊。当真培训个十天半个月就能拿着软件做项目了...不要那么天真...", "answer_votes": "0", "answer_comment": "​添加评论"}
